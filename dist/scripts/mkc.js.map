{"version":3,"sources":["mkc.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","./src/scripts/mkc.js","App","init","./modules/main-app.js","/var/www/html/projets/makina-loader/node_modules/pym.js/src/pym.js","module","factory","define","amd","window","pym","this","MESSAGE_DELIMITER","lib","_getParameterByName","name","regex","RegExp","replace","results","exec","location","search","decodeURIComponent","_isSafeMessage","settings","xdomain","origin","match","_makeMessage","id","messageType","message","bits","join","_makeMessageRegex","_autoInit","elements","document","querySelectorAll","idx","element","setAttribute","src","getAttribute","config","Parent","url","el","getElementById","iframe","messageRegex","messageHandlers","_constructIframe","width","offsetWidth","toString","createElement","hash","hashIndex","indexOf","substring","appendChild","that","addEventListener","sendWidth","_fire","_processMessage","data","_onHeightMessage","height","parseInt","onMessage","callback","push","sendMessage","getElementsByTagName","contentWindow","postMessage","key","Child","parentWidth","renderCallback","polling","parent","sendHeight","offsetHeight","_onWidthMessage","setInterval","/var/www/html/projets/makina-loader/node_modules/randomstring/index.js","./lib/randomstring","/var/www/html/projets/makina-loader/node_modules/randomstring/lib/randomstring.js","chars","generate","string","randomNumber","Math","floor","random","/var/www/html/projets/makina-loader/src/scripts/modules/dataset-polyfill.js","detectMutation","mutationSupported","removeEventListener","toCamelCase","dashChar","m","toUpperCase","updateDataset","dataset","forEach","attributes","attr","value","defineElementGetter","obj","prop","getter","Object","defineProperty","get","__defineGetter__","undefined","Element","prototype","_datasetCache","event","target","/var/www/html/projets/makina-loader/src/scripts/modules/main-app.js","_getURL","dataIndex","index","2015-cantons-et-candidats","2015-resultats-departementales","result","_findPlaceholders","phSelector","_eachPlaceholder","placeholder","newID","randomstring","source","pymParent","JSON","stringify","_init","placeholders","./dataset-polyfill.js","pym.js"],"mappings":"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","file":"mkc.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"./src/scripts/mkc.js\":[function(require,module,exports){\nvar App = require('./modules/main-app.js');\nApp.init();\n\n},{\"./modules/main-app.js\":\"/var/www/html/projets/makina-loader/src/scripts/modules/main-app.js\"}],\"/var/www/html/projets/makina-loader/node_modules/pym.js/src/pym.js\":[function(require,module,exports){\n/*\n* Pym.js is library that resizes an iframe based on the width of the parent and the resulting height of the child.\n* Check out the docs at http://blog.apps.npr.org/pym.js/ or the readme at README.md for usage.\n*/\n\n/* global module */\n\n(function(factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory();\n    } else {\n        window.pym = factory.call(this);\n    }\n})(function() {\n    var MESSAGE_DELIMITER = 'xPYMx';\n\n    var lib = {};\n\n    /**\n    * Generic function for parsing URL params.\n    * Via http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript\n    *\n    * @method _getParameterByName\n    * @param {String} name The name of the paramter to get from the URL.\n    */\n    var _getParameterByName = function(name) {\n        var regex = new RegExp(\"[\\\\?&]\" + name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]') + '=([^&#]*)');\n        var results = regex.exec(location.search);\n\n        if (results === null) {\n            return '';\n        }\n\n        return decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n\n    /**\n     * Check the message to make sure it comes from an acceptable xdomain.\n     * Defaults to '*' but can be overriden in config.\n     *\n     * @method _isSafeMessage\n     * @param {Event} e The message event.\n     * @param {Object} settings Configuration.\n     */\n    var _isSafeMessage = function(e, settings) {\n        if (settings.xdomain !== '*') {\n            // If origin doesn't match our xdomain, return.\n            if (!e.origin.match(new RegExp(settings.xdomain + '$'))) { return; }\n        }\n\n        return true;\n    };\n\n    /**\n     * Construct a message to send between frames.\n     *\n     * NB: We use string-building here because JSON message passing is\n     * not supported in all browsers.\n     *\n     * @method _makeMessage\n     * @param {String} id The unique id of the message recipient.\n     * @param {String} messageType The type of message to send.\n     * @param {String} message The message to send.\n     */\n    var _makeMessage = function(id, messageType, message) {\n        var bits = ['pym', id, messageType, message];\n\n        return bits.join(MESSAGE_DELIMITER);\n    };\n\n    /**\n     * Construct a regex to validate and parse messages.\n     *\n     * @method _makeMessageRegex\n     * @param {String} id The unique id of the message recipient.\n     */\n    var _makeMessageRegex = function(id) {\n        var bits = ['pym', id, '(\\\\S+)', '(.+)'];\n\n        return new RegExp('^' + bits.join(MESSAGE_DELIMITER) + '$');\n    };\n\n    /**\n     * Initialize Pym for elements on page that have data-pym attributes.\n     *\n     * @method _autoInit\n     */\n    var _autoInit = function() {\n        var elements = document.querySelectorAll(\n            '[data-pym-src]:not([data-pym-auto-initialized])'\n        );\n\n        var length = elements.length;\n\n        for (var idx = 0; idx < length; ++idx) {\n            var element = elements[idx];\n\n            /*\n            * Mark automatically-initialized elements so they are not\n            * re-initialized if the user includes pym.js more than once in the\n            * same document.\n            */\n            element.setAttribute('data-pym-auto-initialized', '');\n\n            // Ensure elements have an id\n            if (element.id === '') {\n                element.id = 'pym-' + idx;\n            }\n\n            var src = element.getAttribute('data-pym-src');\n            var xdomain = element.getAttribute('data-pym-xdomain');\n            var config = {};\n\n            if (xdomain) {\n               config.xdomain = xdomain;\n            }\n\n            new lib.Parent(element.id, src, config);\n        }\n    };\n\n    /**\n     * The Parent half of a response iframe.\n     *\n     * @class Parent\n     * @param {String} id The id of the div into which the iframe will be rendered.\n     * @param {String} url The url of the iframe source.\n     * @param {Object} config Configuration to override the default settings.\n     */\n    lib.Parent = function(id, url, config) {\n        this.id = id;\n        this.url = url;\n        this.el = document.getElementById(id);\n        this.iframe = null;\n\n        this.settings = {\n            xdomain: '*'\n        };\n\n        this.messageRegex = _makeMessageRegex(this.id); \n        this.messageHandlers = {};\n\n        /**\n         * Construct the iframe.\n         *\n         * @memberof Parent.prototype\n         * @method _constructIframe\n         */\n        this._constructIframe = function() {\n            // Calculate the width of this element.\n            var width = this.el.offsetWidth.toString();\n\n            // Create an iframe element attached to the document.\n            this.iframe = document.createElement(\"iframe\");\n\n            // Save fragment id\n            var hash = '';\n            var hashIndex = this.url.indexOf('#');\n\n            if (hashIndex > -1) {\n                hash = this.url.substring(hashIndex, this.url.length);\n                this.url = this.url.substring(0, hashIndex);\n            }\n\n            // If the URL contains querystring bits, use them.\n            // Otherwise, just create a set of valid params.\n            if (this.url.indexOf('?') < 0) {\n                this.url += '?';\n            } else {\n                this.url += '&';\n            }\n            \n            // Append the initial width as a querystring parameter, and the fragment id\n            this.iframe.src = this.url + 'initialWidth=' + width + '&childId=' + this.id + hash;\n\n            // Set some attributes to this proto-iframe.\n            this.iframe.setAttribute('width', '100%');\n            this.iframe.setAttribute('scrolling', 'no');\n            this.iframe.setAttribute('marginheight', '0');\n            this.iframe.setAttribute('frameborder', '0');\n\n            // Append the iframe to our element.\n            this.el.appendChild(this.iframe);\n\n            // Add an event listener that will handle redrawing the child on resize.\n            var that = this;\n            window.addEventListener('resize', function() {\n                that.sendWidth();\n            });\n        };\n\n        /**\n         * Fire all event handlers for a given message type.\n         *\n         * @memberof Parent.prototype\n         * @method _fire\n         * @param {String} messageType The type of message.\n         * @param {String} message The message data.\n         */\n        this._fire = function(messageType, message) {\n            if (messageType in this.messageHandlers) {\n                for (var i = 0; i < this.messageHandlers[messageType].length; i++) {\n                   this.messageHandlers[messageType][i].call(this, message);\n                }\n            }\n        };\n\n        /**\n         * @callback Parent~onMessageCallback\n         * @param {String} message The message data.\n         */\n\n        /**\n         * Process a new message from the child.\n         *\n         * @memberof Parent.prototype\n         * @method _processMessage\n         * @param {Event} e A message event.\n         */\n        this._processMessage = function(e) {\n            if (!_isSafeMessage(e, this.settings)) { return; }\n\n            // Grab the message from the child and parse it.\n            var match = e.data.match(this.messageRegex);\n\n            // If there's no match or too many matches in the message, punt.\n            if (!match || match.length !== 3) {\n                return false;\n            }\n\n            var messageType = match[1];\n            var message = match[2];\n\n            this._fire(messageType, message);\n        };\n\n        /**\n         * Resize iframe in response to new height message from child.\n         *\n         * @memberof Parent.prototype\n         * @method _onHeightMessage\n         * @param {String} message The new height.\n         */\n        this._onHeightMessage = function(message) {\n            /*\n             * Handle parent message from child.\n             */\n            var height = parseInt(message);\n            \n            this.iframe.setAttribute('height', height + 'px');\n        };\n\n\n        /**\n         * Bind a callback to a given messageType from the child.\n         *\n         * @memberof Parent.prototype\n         * @method onMessage\n         * @param {String} messageType The type of message being listened for.\n         * @param {Parent~onMessageCallback} callback The callback to invoke when a message of the given type is received.\n         */\n        this.onMessage = function(messageType, callback) {\n            if (!(messageType in this.messageHandlers)) {\n                this.messageHandlers[messageType] = [];\n            }\n\n            this.messageHandlers[messageType].push(callback);\n        };\n\n        /**\n         * Send a message to the the child.\n         *\n         * @memberof Parent.prototype\n         * @method sendMessage\n         * @param {String} messageType The type of message to send.\n         * @param {String} message The message data to send.\n         */\n        this.sendMessage = function(messageType, message) {\n            this.el.getElementsByTagName('iframe')[0].contentWindow.postMessage(_makeMessage(this.id, messageType, message), '*');\n        };\n\n        /**\n         * Transmit the current iframe width to the child.\n         *\n         * You shouldn't need to call this directly.\n         *\n         * @memberof Parent.prototype\n         * @method sendWidth\n         */\n        this.sendWidth = function() {\n            var width = this.el.offsetWidth.toString();\n\n            this.sendMessage('width', width);\n        };\n\n        // Add any overrides to settings coming from config.\n        for (var key in config) {\n            this.settings[key] = config[key];\n        }\n\n        // Add height event callback \n        this.onMessage('height', this._onHeightMessage);\n\n        // Add a listener for processing messages from the child.\n        var that = this;\n        window.addEventListener('message', function(e) {\n            return that._processMessage(e);\n        }, false);\n\n        // Construct the iframe in the container element.\n        this._constructIframe();\n\n        return this;\n    };\n\n    /**\n     * The Child half of a responsive iframe.\n     *\n     * @class Child\n     * @param {Object} config Configuration to override the default settings.\n     */\n    lib.Child = function(config) {\n        this.parentWidth = null;\n        this.id = null;\n\n        this.settings = {\n            renderCallback: null,\n            xdomain: '*',\n            polling: 0\n        };\n\n        this.messageRegex = null;\n        this.messageHandlers = {};\n\n        /**\n         * Bind a callback to a given messageType from the child.\n         *\n         * @memberof Child.prototype\n         * @method onMessage\n         * @param {String} messageType The type of message being listened for.\n         * @param {Child~onMessageCallback} callback The callback to invoke when a message of the given type is received.\n         */\n        this.onMessage = function(messageType, callback) {\n            if (!(messageType in this.messageHandlers)) {\n                this.messageHandlers[messageType] = [];\n            }\n\n            this.messageHandlers[messageType].push(callback);\n        };\n\n        /**\n         * @callback Child~onMessageCallback\n         * @param {String} message The message data.\n         */\n\n        /**\n         * Fire all event handlers for a given message type.\n         *\n         * @memberof Parent.prototype\n         * @method _fire\n         * @param {String} messageType The type of message.\n         * @param {String} message The message data.\n         */\n        this._fire = function(messageType, message) {\n            /*\n             * Fire all event handlers for a given message type.\n             */\n            if (messageType in this.messageHandlers) {\n                for (var i = 0; i < this.messageHandlers[messageType].length; i++) {\n                   this.messageHandlers[messageType][i].call(this, message);\n                }\n            }\n        };\n\n        /**\n         * Process a new message from the parent.\n         *\n         * @memberof Child.prototype\n         * @method _processMessage\n         * @param {Event} e A message event.\n         */\n        this._processMessage = function(e) {\n            /*\n            * Process a new message from parent frame.\n            */\n            // First, punt if this isn't from an acceptable xdomain.\n            if (!_isSafeMessage(e, this.settings)) { return; }\n\n            // Get the message from the parent.\n            var match = e.data.match(this.messageRegex);\n\n            // If there's no match or it's a bad format, punt.\n            if (!match || match.length !== 3) { return; }\n\n            var messageType = match[1];\n            var message = match[2];\n\n            this._fire(messageType, message);\n        };\n\n        /**\n         * Send a message to the the Parent.\n         *\n         * @memberof Child.prototype\n         * @method sendMessage\n         * @param {String} messageType The type of message to send.\n         * @param {String} message The message data to send.\n         */\n        this.sendMessage = function(messageType, message) {\n            /*\n             * Send a message to the parent.\n             */\n            window.parent.postMessage(_makeMessage(this.id, messageType, message), '*');\n        };\n\n        /**\n         * Transmit the current iframe height to the parent.\n         *\n         * Call this directly in cases where you manually alter the height of the iframe contents.\n         *\n         * @memberof Child.prototype\n         * @method sendHeight\n         */\n        this.sendHeight = function() {\n            /*\n            * Transmit the current iframe height to the parent.\n            * Make this callable from external scripts in case they update the body out of sequence.\n            */\n\n            // Get the child's height.\n            var height = document.getElementsByTagName('body')[0].offsetHeight.toString();\n\n            // Send the height to the parent.\n            that.sendMessage('height', height);\n        };\n\n        /**\n         * Resize iframe in response to new width message from parent.\n         *\n         * @memberof Child.prototype\n         * @method _onWidthMessage\n         * @param {String} message The new width.\n         */\n        this._onWidthMessage = function(message) {\n            /*\n             * Handle width message from the child.\n             */\n            var width = parseInt(message);\n\n            // Change the width if it's different.\n            if (width !== this.parentWidth) {\n                this.parentWidth = width;\n\n                // Call the callback function if it exists.\n                if (this.settings.renderCallback) {\n                    this.settings.renderCallback(width);\n                }\n\n                // Send the height back to the parent.\n                this.sendHeight();\n            }\n        };\n\n        // Identify what ID the parent knows this child as.\n        this.id = _getParameterByName('childId') || config.id;\n        this.messageRegex = new RegExp('^pym' + MESSAGE_DELIMITER + this.id + MESSAGE_DELIMITER + '(\\\\S+)' + MESSAGE_DELIMITER + '(.+)$');\n\n        // Get the initial width from a URL parameter.\n        var width = parseInt(_getParameterByName('initialWidth'));\n\n        // Bind the width message handler\n        this.onMessage('width', this._onWidthMessage);\n\n        // Initialize settings with overrides.\n        for (var key in config) {\n            this.settings[key] = config[key];\n        }\n\n        // Set up a listener to handle any incoming messages.\n        var that = this;\n        window.addEventListener('message', function(e) {\n            that._processMessage(e);\n        }, false);\n\n        // If there's a callback function, call it.\n        if (this.settings.renderCallback) {\n            this.settings.renderCallback(width);\n        }\n\n        // Send the initial height to the parent.\n        this.sendHeight();\n\n        // If we're configured to poll, create a setInterval to handle that.\n        if (this.settings.polling) {\n            window.setInterval(this.sendHeight, this.settings.polling);\n        }\n\n        return this;\n    };\n\n    // Initialize elements with pym data attributes\n    _autoInit();\n\n    return lib;\n});\n\n},{}],\"/var/www/html/projets/makina-loader/node_modules/randomstring/index.js\":[function(require,module,exports){\nmodule.exports = require(\"./lib/randomstring\");\n},{\"./lib/randomstring\":\"/var/www/html/projets/makina-loader/node_modules/randomstring/lib/randomstring.js\"}],\"/var/www/html/projets/makina-loader/node_modules/randomstring/lib/randomstring.js\":[function(require,module,exports){\nvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghiklmnopqrstuvwxyz';\n\nexports.generate = function(length) {\n  length = length ? length : 32;\n  \n  var string = '';\n  \n  for (var i = 0; i < length; i++) {\n    var randomNumber = Math.floor(Math.random() * chars.length);\n    string += chars.substring(randomNumber, randomNumber + 1);\n  }\n  \n  return string;\n}\n},{}],\"/var/www/html/projets/makina-loader/src/scripts/modules/dataset-polyfill.js\":[function(require,module,exports){\nmodule.exports = (function () {\n  /**\n   * Source:\n   * https://github.com/remy/polyfills/blob/master/dataset.js\n   */\n  var forEach = [].forEach,\n      regex = /^data-(.+)/,\n      dashChar = /\\-([a-z])/ig,\n      el = document.createElement('div'),\n      mutationSupported = false,\n      match\n  ;\n\n  function detectMutation() {\n    mutationSupported = true;\n    this.removeEventListener('DOMAttrModified', detectMutation, false);\n  }\n\n  function toCamelCase(s) {\n    return s.replace(dashChar, function (m,l) { return l.toUpperCase(); });\n  }\n\n  function updateDataset() {\n    var dataset = {};\n    forEach.call(this.attributes, function(attr) {\n      if (match = attr.name.match(regex))\n        dataset[toCamelCase(match[1])] = attr.value;\n    });\n    return dataset;\n  }\n\n  // only add support if the browser doesn't support data-* natively\n  if (el.dataset != undefined) return;\n\n  el.addEventListener('DOMAttrModified', detectMutation, false);\n  el.setAttribute('foo', 'bar');\n\n  function defineElementGetter (obj, prop, getter) {\n    if (Object.defineProperty) {\n        Object.defineProperty(obj, prop,{\n            get : getter\n        });\n    } else {\n        obj.__defineGetter__(prop, getter);\n    }\n  }\n\n  defineElementGetter(Element.prototype, 'dataset', mutationSupported\n    ? function () {\n      if (!this._datasetCache) {\n        this._datasetCache = updateDataset.call(this);\n      }\n      return this._datasetCache;\n    }\n    : updateDataset\n  );\n\n  document.addEventListener('DOMAttrModified', function (event) {\n    delete event.target._datasetCache;\n  }, false);\n})();\n},{}],\"/var/www/html/projets/makina-loader/src/scripts/modules/main-app.js\":[function(require,module,exports){\nmodule.exports = (function () {\n\tvar o = {\n\t\tphSelector: '.mkc-placeholder'\n\t};\n\n\trequire('./dataset-polyfill.js');\n\tvar pym          = require('pym.js');\n\tvar randomstring = require('randomstring');\n\n\tfunction _getURL (dataIndex) {\n\t\t/**\n\t\t * TODO: Outsource targets table\n\t\t */\n\t\tvar index = {\n\t\t\t'2015-cantons-et-candidats': {\n\t\t\t\turl: 'http://cartes-elections.makina-corpus.net/departementales-2015/app/public/'\n\t\t\t},\n\t\t\t'2015-resultats-departementales': {\n\t\t\t\turl: 'http://cartes-elections.makina-corpus.net/departementales-2015/app/public/departement.html'\n\t\t\t}\n\t\t}\n\t\tvar result = index[dataIndex];\n\t\treturn (result && result.url) ? result.url : 'about:blank';\n\t}\n\n\tfunction _browserContext () {\n\t\treturn (typeof window !== 'undefined');\n\t}\n\n\tfunction _findPlaceholders () {\n\t\treturn document.querySelectorAll(o.phSelector);\n\t}\n\n\tfunction _eachPlaceholder (placeholder) {\n\t\tvar newID      = 'mkc-' + randomstring.generate(8);\n\t\tplaceholder.id = newID;\n\t\tvar dataIndex  = placeholder.dataset.source;\n\n\t\tvar pymParent  = new pym.Parent(newID, _getURL(dataIndex), {});\n\n\t\tpymParent.onMessage('event', function (message) {\n\t\t\tif (message === 'ready') {\n\t\t\t\tpymParent.sendMessage('data', JSON.stringify(placeholder.dataset));\n\n\t\t\t\tif (this.iframe && this.iframe.setAttribute) {\n\t\t\t\t\tthis.iframe.setAttribute('allowfullscreen', '');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction _init () {\n\t\tvar placeholders = _findPlaceholders();\n\t\t[].forEach.call(placeholders, _eachPlaceholder);\n\t}\n\treturn {\n\t\tinit: _init\n\t}\n}());\n\n},{\"./dataset-polyfill.js\":\"/var/www/html/projets/makina-loader/src/scripts/modules/dataset-polyfill.js\",\"pym.js\":\"/var/www/html/projets/makina-loader/node_modules/pym.js/src/pym.js\",\"randomstring\":\"/var/www/html/projets/makina-loader/node_modules/randomstring/index.js\"}]},{},[\"./src/scripts/mkc.js\"]);\n"],"sourceRoot":"/source/"}