{"version":3,"sources":["mkc.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","factory","define","amd","window","pym","this","MESSAGE_DELIMITER","lib","_raiseCustomEvent","eventName","event","document","createEvent","initEvent","dispatchEvent","_getParameterByName","name","results","RegExp","replace","exec","location","search","decodeURIComponent","_isSafeMessage","settings","xdomain","origin","match","data","_makeMessage","id","messageType","message","join","_getNow","Date","now","getTime","_cleanAutoInitInstances","idx","autoInitInstances","instance","el","getElementsByTagName","contentWindow","splice","autoInit","doNotRaiseEvents","elements","querySelectorAll","element","setAttribute","Math","random","toString","substr","src","getAttribute","title","sandbox","allowfullscreen","parenturlparam","parenturlvalue","optionalparams","trackscroll","scrollwait","config","attribute","Number","isNaN","console","err","parent","Parent","push","url","key","getElementById","iframe","href","messageRegex","messageHandlers","_constructIframe","width","offsetWidth","createElement","hash","hashIndex","indexOf","substring","encodeURIComponent","undefined","firstChild","removeChild","appendChild","addEventListener","_onResize","_throttleOnScroll","sendWidth","sendViewportAndIFramePosition","bind","_onScroll","_fire","remove","removeEventListener","_processMessage","_onHeightMessage","height","parseInt","_onNavigateToMessage","_isSafeUrl","_onScrollToChildPosMessage","totalOffset","getBoundingClientRect","top","pageYOffset","scrollTo","onMessage","callback","sendMessage","postMessage","iframeRect","payload","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","left","bottom","right","func","wait","options","context","args","result","timeout","previous","later","leading","apply","remaining","arguments","clearTimeout","trailing","setTimeout","_throttle","Child","parentWidth","parentTitle","parentUrl","renderCallback","polling","timerId","_onWidthMessage","sendHeight","offsetHeight","getParentPositionInfo","scrollParentTo","navigateParentTo","scrollParentToChildEl","topPos","scrollParentToChildPos","pos","clearInterval","setInterval","onMarkedEmbeddedStatus","newClassForHtml","htmlElement","originalHtmlClasses","className","self","_markWhetherEmbedded","2","init","./modules/main-app.js","3","obj","prop","getter","forEach","regex","dashChar","mutationSupported","updateDataset","dataset","attributes","attr","s","m","l","toUpperCase","value","detectMutation","Element","prototype","_datasetCache","Object","defineProperty","get","__defineGetter__","target","4","phSelector","_eachPlaceholder","placeholder","newID","prefix","more_entropy","retId","formatSeed","seed","reqWidth","slice","Array","php_js","uniqidSeed","floor","toFixed","uniqid","dataIndex","hostPrefix","source","pymParent","2015-cantons-et-candidats","2015-resultats-departementales","split","JSON","stringify","placeholders","./dataset-polyfill.js","pym.js"],"mappings":"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","file":"mkc.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n/*! pym.js - v1.3.2 - 2018-02-13 */\n/*\n* Pym.js is library that resizes an iframe based on the width of the parent and the resulting height of the child.\n* Check out the docs at http://blog.apps.npr.org/pym.js/ or the readme at README.md for usage.\n*/\n\n/** @module pym */\n(function(factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    }\n    else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory();\n    } else {\n        window.pym = factory.call(this);\n    }\n})(function() {\n    var MESSAGE_DELIMITER = 'xPYMx';\n\n    var lib = {};\n\n    /**\n    * Create and dispatch a custom pym event\n    *\n    * @method _raiseCustomEvent\n    * @inner\n    *\n    * @param {String} eventName\n    */\n   var _raiseCustomEvent = function(eventName) {\n     var event = document.createEvent('Event');\n     event.initEvent('pym:' + eventName, true, true);\n     document.dispatchEvent(event);\n   };\n\n    /**\n    * Generic function for parsing URL params.\n    * Via http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript\n    *\n    * @method _getParameterByName\n    * @inner\n    *\n    * @param {String} name The name of the paramter to get from the URL.\n    */\n    var _getParameterByName = function(name) {\n        var regex = new RegExp(\"[\\\\?&]\" + name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]') + '=([^&#]*)');\n        var results = regex.exec(location.search);\n\n        if (results === null) {\n            return '';\n        }\n\n        return decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n\n    /**\n     * Check the message to make sure it comes from an acceptable xdomain.\n     * Defaults to '*' but can be overriden in config.\n     *\n     * @method _isSafeMessage\n     * @inner\n     *\n     * @param {Event} e The message event.\n     * @param {Object} settings Configuration.\n     */\n    var _isSafeMessage = function(e, settings) {\n        if (settings.xdomain !== '*') {\n            // If origin doesn't match our xdomain, return.\n            if (!e.origin.match(new RegExp(settings.xdomain + '$'))) { return; }\n        }\n\n        // Ignore events that do not carry string data #151\n        if (typeof e.data !== 'string') { return; }\n\n        return true;\n    };\n\n    var _isSafeUrl = function(url) {\n        // Adapted from angular 2 url sanitizer\n        var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp):|[^&:/?#]*(?:[/?#]|$))/gi;\n        if (!url.match(SAFE_URL_PATTERN)) { return; }\n        \n        return true;\n    };\n\n    /**\n     * Construct a message to send between frames.\n     *\n     * NB: We use string-building here because JSON message passing is\n     * not supported in all browsers.\n     *\n     * @method _makeMessage\n     * @inner\n     *\n     * @param {String} id The unique id of the message recipient.\n     * @param {String} messageType The type of message to send.\n     * @param {String} message The message to send.\n     */\n    var _makeMessage = function(id, messageType, message) {\n        var bits = ['pym', id, messageType, message];\n\n        return bits.join(MESSAGE_DELIMITER);\n    };\n\n    /**\n     * Construct a regex to validate and parse messages.\n     *\n     * @method _makeMessageRegex\n     * @inner\n     *\n     * @param {String} id The unique id of the message recipient.\n     */\n    var _makeMessageRegex = function(id) {\n        var bits = ['pym', id, '(\\\\S+)', '(.*)'];\n\n        return new RegExp('^' + bits.join(MESSAGE_DELIMITER) + '$');\n    };\n\n    /**\n    * Underscore implementation of getNow\n    *\n    * @method _getNow\n    * @inner\n    *\n    */\n    var _getNow = Date.now || function() {\n        return new Date().getTime();\n    };\n\n    /**\n    * Underscore implementation of throttle\n    *\n    * @method _throttle\n    * @inner\n    *\n    * @param {function} func Throttled function\n    * @param {number} wait Throttle wait time\n    * @param {object} options Throttle settings\n    */\n\n    var _throttle = function(func, wait, options) {\n        var context, args, result;\n        var timeout = null;\n        var previous = 0;\n        if (!options) {options = {};}\n        var later = function() {\n            previous = options.leading === false ? 0 : _getNow();\n            timeout = null;\n            result = func.apply(context, args);\n            if (!timeout) {context = args = null;}\n        };\n        return function() {\n            var now = _getNow();\n            if (!previous && options.leading === false) {previous = now;}\n            var remaining = wait - (now - previous);\n            context = this;\n            args = arguments;\n            if (remaining <= 0 || remaining > wait) {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                previous = now;\n                result = func.apply(context, args);\n                if (!timeout) {context = args = null;}\n            } else if (!timeout && options.trailing !== false) {\n                timeout = setTimeout(later, remaining);\n            }\n            return result;\n        };\n    };\n\n    /**\n     * Clean autoInit Instances: those that point to contentless iframes\n     * @method _cleanAutoInitInstances\n     * @inner\n     */\n    var _cleanAutoInitInstances = function() {\n        var length = lib.autoInitInstances.length;\n\n        // Loop backwards to avoid index issues\n        for (var idx = length - 1; idx >= 0; idx--) {\n            var instance = lib.autoInitInstances[idx];\n            // If instance has been removed or is contentless then remove it\n            if (instance.el.getElementsByTagName('iframe').length &&\n                instance.el.getElementsByTagName('iframe')[0].contentWindow) {\n                continue;\n            }\n            else {\n                // Remove the reference to the removed or orphan instance\n                lib.autoInitInstances.splice(idx,1);\n            }\n        }\n    };\n\n    /**\n     * Store auto initialized Pym instances for further reference\n     * @name module:pym#autoInitInstances\n     * @type Array\n     * @default []\n     */\n    lib.autoInitInstances = [];\n\n    /**\n     * Initialize Pym for elements on page that have data-pym attributes.\n     * Expose autoinit in case we need to call it from the outside\n     * @instance\n     * @method autoInit\n     * @param {Boolean} doNotRaiseEvents flag to avoid sending custom events\n     */\n    lib.autoInit = function(doNotRaiseEvents) {\n        var elements = document.querySelectorAll('[data-pym-src]:not([data-pym-auto-initialized])');\n        var length = elements.length;\n\n        // Clean stored instances in case needed\n        _cleanAutoInitInstances();\n        for (var idx = 0; idx < length; ++idx) {\n            var element = elements[idx];\n            /*\n            * Mark automatically-initialized elements so they are not\n            * re-initialized if the user includes pym.js more than once in the\n            * same document.\n            */\n            element.setAttribute('data-pym-auto-initialized', '');\n\n            // Ensure elements have an id\n            if (element.id === '') {\n                element.id = 'pym-' + idx + \"-\" + Math.random().toString(36).substr(2,5);\n            }\n\n            var src = element.getAttribute('data-pym-src');\n\n            // List of data attributes to configure the component\n            // structure: {'attribute name': 'type'}\n            var settings = {'xdomain': 'string', 'title': 'string', 'name': 'string', 'id': 'string',\n                            'sandbox': 'string', 'allowfullscreen': 'boolean',\n                            'parenturlparam': 'string', 'parenturlvalue': 'string',\n                            'optionalparams': 'boolean', 'trackscroll': 'boolean',\n                            'scrollwait': 'number'};\n\n            var config = {};\n\n            for (var attribute in settings) {\n                // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute#Notes\n               if (element.getAttribute('data-pym-'+attribute) !== null) {\n                  switch (settings[attribute]) {\n                    case 'boolean':\n                       config[attribute] = !(element.getAttribute('data-pym-'+attribute) === 'false'); // jshint ignore:line\n                       break;\n                    case 'string':\n                       config[attribute] = element.getAttribute('data-pym-'+attribute);\n                       break;\n                    case 'number':\n                        var n = Number(element.getAttribute('data-pym-'+attribute));\n                        if (!isNaN(n)) {\n                            config[attribute] = n;\n                        }\n                        break;\n                    default:\n                       console.err('unrecognized attribute type');\n                  }\n               }\n            }\n\n            // Store references to autoinitialized pym instances\n            var parent = new lib.Parent(element.id, src, config);\n            lib.autoInitInstances.push(parent);\n        }\n\n        // Fire customEvent\n        if (!doNotRaiseEvents) {\n            _raiseCustomEvent(\"pym-initialized\");\n        }\n        // Return stored autoinitalized pym instances\n        return lib.autoInitInstances;\n    };\n\n    /**\n     * The Parent half of a response iframe.\n     *\n     * @memberof module:pym\n     * @class Parent\n     * @param {String} id The id of the div into which the iframe will be rendered. sets {@link module:pym.Parent~id}\n     * @param {String} url The url of the iframe source. sets {@link module:pym.Parent~url}\n     * @param {Object} [config] Configuration for the parent instance. sets {@link module:pym.Parent~settings}\n     * @param {string} [config.xdomain='*'] - xdomain to validate messages received\n     * @param {string} [config.title] - if passed it will be assigned to the iframe title attribute\n     * @param {string} [config.name] - if passed it will be assigned to the iframe name attribute\n     * @param {string} [config.id] - if passed it will be assigned to the iframe id attribute\n     * @param {boolean} [config.allowfullscreen] - if passed and different than false it will be assigned to the iframe allowfullscreen attribute\n     * @param {string} [config.sandbox] - if passed it will be assigned to the iframe sandbox attribute (we do not validate the syntax so be careful!!)\n     * @param {string} [config.parenturlparam] - if passed it will be override the default parentUrl query string parameter name passed to the iframe src\n     * @param {string} [config.parenturlvalue] - if passed it will be override the default parentUrl query string parameter value passed to the iframe src\n     * @param {string} [config.optionalparams] - if passed and different than false it will strip the querystring params parentUrl and parentTitle passed to the iframe src\n     * @param {boolean} [config.trackscroll] - if passed it will activate scroll tracking on the parent\n     * @param {number} [config.scrollwait] - if passed it will set the throttle wait in order to fire scroll messaging. Defaults to 100 ms.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe iFrame}\n     */\n    lib.Parent = function(id, url, config) {\n        /**\n         * The id of the container element\n         *\n         * @memberof module:pym.Parent\n         * @member {string} id\n         * @inner\n         */\n        this.id = id;\n        /**\n         * The url that will be set as the iframe's src\n         *\n         * @memberof module:pym.Parent\n         * @member {String} url\n         * @inner\n         */\n        this.url = url;\n\n        /**\n         * The container DOM object\n         *\n         * @memberof module:pym.Parent\n         * @member {HTMLElement} el\n         * @inner\n         */\n        this.el = document.getElementById(id);\n        /**\n         * The contained child iframe\n         *\n         * @memberof module:pym.Parent\n         * @member {HTMLElement} iframe\n         * @inner\n         * @default null\n         */\n        this.iframe = null;\n        /**\n         * The parent instance settings, updated by the values passed in the config object\n         *\n         * @memberof module:pym.Parent\n         * @member {Object} settings\n         * @inner\n         */\n        this.settings = {\n            xdomain: '*',\n            optionalparams: true,\n            parenturlparam: 'parentUrl',\n            parenturlvalue: window.location.href,\n            trackscroll: false,\n            scrollwait: 100,\n        };\n        /**\n         * RegularExpression to validate the received messages\n         *\n         * @memberof module:pym.Parent\n         * @member {String} messageRegex\n         * @inner\n         */\n        this.messageRegex = _makeMessageRegex(this.id);\n        /**\n         * Stores the registered messageHandlers for each messageType\n         *\n         * @memberof module:pym.Parent\n         * @member {Object} messageHandlers\n         * @inner\n         */\n        this.messageHandlers = {};\n\n        // ensure a config object\n        config = (config || {});\n\n        /**\n         * Construct the iframe.\n         *\n         * @memberof module:pym.Parent\n         * @method _constructIframe\n         * @inner\n         */\n        this._constructIframe = function() {\n            // Calculate the width of this element.\n            var width = this.el.offsetWidth.toString();\n\n            // Create an iframe element attached to the document.\n            this.iframe = document.createElement('iframe');\n\n            // Save fragment id\n            var hash = '';\n            var hashIndex = this.url.indexOf('#');\n\n            if (hashIndex > -1) {\n                hash = this.url.substring(hashIndex, this.url.length);\n                this.url = this.url.substring(0, hashIndex);\n            }\n\n            // If the URL contains querystring bits, use them.\n            // Otherwise, just create a set of valid params.\n            if (this.url.indexOf('?') < 0) {\n                this.url += '?';\n            } else {\n                this.url += '&';\n            }\n\n            // Append the initial width as a querystring parameter\n            // and optional params if configured to do so\n            this.iframe.src = this.url + 'initialWidth=' + width +\n                                         '&childId=' + this.id;\n\n            if (this.settings.optionalparams) {\n                this.iframe.src += '&parentTitle=' + encodeURIComponent(document.title);\n                this.iframe.src += '&'+ this.settings.parenturlparam + '=' + encodeURIComponent(this.settings.parenturlvalue);\n            }\n            this.iframe.src +=hash;\n\n            // Set some attributes to this proto-iframe.\n            this.iframe.setAttribute('width', '100%');\n            this.iframe.setAttribute('scrolling', 'no');\n            this.iframe.setAttribute('marginheight', '0');\n            this.iframe.setAttribute('frameborder', '0');\n\n            if (this.settings.title) {\n                this.iframe.setAttribute('title', this.settings.title);\n            }\n\n            if (this.settings.allowfullscreen !== undefined && this.settings.allowfullscreen !== false) {\n                this.iframe.setAttribute('allowfullscreen','');\n            }\n\n            if (this.settings.sandbox !== undefined && typeof this.settings.sandbox === 'string') {\n                this.iframe.setAttribute('sandbox', this.settings.sandbox);\n            }\n\n            if (this.settings.id) {\n                if (!document.getElementById(this.settings.id)) {\n                    this.iframe.setAttribute('id', this.settings.id);\n                }\n            }\n\n            if (this.settings.name) {\n                this.iframe.setAttribute('name', this.settings.name);\n            }\n\n            // Replace the child content if needed\n            // (some CMSs might strip out empty elements)\n            while(this.el.firstChild) { this.el.removeChild(this.el.firstChild); }\n            // Append the iframe to our element.\n            this.el.appendChild(this.iframe);\n\n            // Add an event listener that will handle redrawing the child on resize.\n            window.addEventListener('resize', this._onResize);\n\n            // Add an event listener that will send the child the viewport.\n            if (this.settings.trackscroll) {\n                window.addEventListener('scroll', this._throttleOnScroll);\n            }\n        };\n\n        /**\n         * Send width on resize.\n         *\n         * @memberof module:pym.Parent\n         * @method _onResize\n         * @inner\n         */\n        this._onResize = function() {\n            this.sendWidth();\n            if (this.settings.trackscroll) {\n                this.sendViewportAndIFramePosition();\n            }\n        }.bind(this);\n\n        /**\n         * Send viewport and iframe info on scroll.\n         *\n         * @memberof module:pym.Parent\n         * @method _onScroll\n         * @inner\n         */\n        this._onScroll = function() {\n            this.sendViewportAndIFramePosition();\n        }.bind(this);\n\n        /**\n         * Fire all event handlers for a given message type.\n         *\n         * @memberof module:pym.Parent\n         * @method _fire\n         * @inner\n         *\n         * @param {String} messageType The type of message.\n         * @param {String} message The message data.\n         */\n        this._fire = function(messageType, message) {\n            if (messageType in this.messageHandlers) {\n                for (var i = 0; i < this.messageHandlers[messageType].length; i++) {\n                   this.messageHandlers[messageType][i].call(this, message);\n                }\n            }\n        };\n\n        /**\n         * Remove this parent from the page and unbind it's event handlers.\n         *\n         * @memberof module:pym.Parent\n         * @method remove\n         * @instance\n         */\n        this.remove = function() {\n            window.removeEventListener('message', this._processMessage);\n            window.removeEventListener('resize', this._onResize);\n\n            this.el.removeChild(this.iframe);\n            // _cleanAutoInitInstances in case this parent was autoInitialized\n            _cleanAutoInitInstances();\n        };\n\n        /**\n         * Process a new message from the child.\n         *\n         * @memberof module:pym.Parent\n         * @method _processMessage\n         * @inner\n         *\n         * @param {Event} e A message event.\n         */\n        this._processMessage = function(e) {\n            // First, punt if this isn't from an acceptable xdomain.\n            if (!_isSafeMessage(e, this.settings)) {\n                return;\n            }\n\n            // Discard object messages, we only care about strings\n            if (typeof e.data !== 'string') {\n                return;\n            }\n\n            // Grab the message from the child and parse it.\n            var match = e.data.match(this.messageRegex);\n\n            // If there's no match or too many matches in the message, punt.\n            if (!match || match.length !== 3) {\n                return false;\n            }\n\n            var messageType = match[1];\n            var message = match[2];\n\n            this._fire(messageType, message);\n        }.bind(this);\n\n        /**\n         * Resize iframe in response to new height message from child.\n         *\n         * @memberof module:pym.Parent\n         * @method _onHeightMessage\n         * @inner\n         *\n         * @param {String} message The new height.\n         */\n        this._onHeightMessage = function(message) {\n            /*\n             * Handle parent height message from child.\n             */\n            var height = parseInt(message);\n\n            this.iframe.setAttribute('height', height + 'px');\n        };\n\n        /**\n         * Navigate parent to a new url.\n         *\n         * @memberof module:pym.Parent\n         * @method _onNavigateToMessage\n         * @inner\n         *\n         * @param {String} message The url to navigate to.\n         */\n        this._onNavigateToMessage = function(message) {\n            /*\n             * Handle parent scroll message from child.\n             */\n             if (!_isSafeUrl(message)) {return;}\n            document.location.href = message;\n        };\n\n        /**\n         * Scroll parent to a given child position.\n         *\n         * @memberof module:pym.Parent\n         * @method _onScrollToChildPosMessage\n         * @inner\n         *\n         * @param {String} message The offset inside the child page.\n         */\n        this._onScrollToChildPosMessage = function(message) {\n            // Get the child container position using getBoundingClientRect + pageYOffset\n            // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n            var iframePos = document.getElementById(this.id).getBoundingClientRect().top + window.pageYOffset;\n\n            var totalOffset = iframePos + parseInt(message);\n            window.scrollTo(0, totalOffset);\n        };\n\n        /**\n         * Bind a callback to a given messageType from the child.\n         *\n         * Reserved message names are: \"height\", \"scrollTo\" and \"navigateTo\".\n         *\n         * @memberof module:pym.Parent\n         * @method onMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message being listened for.\n         * @param {module:pym.Parent~onMessageCallback} callback The callback to invoke when a message of the given type is received.\n         */\n        this.onMessage = function(messageType, callback) {\n            if (!(messageType in this.messageHandlers)) {\n                this.messageHandlers[messageType] = [];\n            }\n\n            this.messageHandlers[messageType].push(callback);\n        };\n\n        /**\n         * @callback module:pym.Parent~onMessageCallback\n         * @param {String} message The message data.\n         */\n\n        /**\n         * Send a message to the the child.\n         *\n         * @memberof module:pym.Parent\n         * @method sendMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message to send.\n         * @param {String} message The message data to send.\n         */\n        this.sendMessage = function(messageType, message) {\n            // When used alongside with pjax some references are lost\n            if (this.el.getElementsByTagName('iframe').length) {\n                if (this.el.getElementsByTagName('iframe')[0].contentWindow) {\n                    this.el.getElementsByTagName('iframe')[0].contentWindow\n                        .postMessage(_makeMessage(this.id, messageType, message), '*');\n                }\n                else {\n                    // Contentless child detected remove listeners and iframe\n                    this.remove();\n                }\n            }\n        };\n\n        /**\n         * Transmit the current iframe width to the child.\n         *\n         * You shouldn't need to call this directly.\n         *\n         * @memberof module:pym.Parent\n         * @method sendWidth\n         * @instance\n         */\n        this.sendWidth = function() {\n            var width = this.el.offsetWidth.toString();\n            this.sendMessage('width', width);\n        };\n\n        /**\n         * Transmit the current viewport and iframe position to the child.\n         * Sends viewport width, viewport height\n         * and iframe bounding rect top-left-bottom-right\n         * all separated by spaces\n         *\n         * You shouldn't need to call this directly.\n         *\n         * @memberof module:pym.Parent\n         * @method sendViewportAndIFramePosition\n         * @instance\n         */\n        this.sendViewportAndIFramePosition = function() {\n            var iframeRect = this.iframe.getBoundingClientRect();\n            var vWidth   = window.innerWidth || document.documentElement.clientWidth;\n            var vHeight  = window.innerHeight || document.documentElement.clientHeight;\n            var payload = vWidth + ' ' + vHeight;\n            payload += ' ' + iframeRect.top + ' ' + iframeRect.left;\n            payload += ' ' + iframeRect.bottom + ' ' + iframeRect.right;\n            this.sendMessage('viewport-iframe-position', payload);\n        };\n\n        // Add any overrides to settings coming from config.\n        for (var key in config) {\n            this.settings[key] = config[key];\n        }\n\n        /**\n         * Throttled scroll function.\n         *\n         * @memberof module:pym.Parent\n         * @method _throttleOnScroll\n         * @inner\n         */\n        this._throttleOnScroll = _throttle(this._onScroll.bind(this), this.settings.scrollwait);\n\n        // Bind required message handlers\n        this.onMessage('height', this._onHeightMessage);\n        this.onMessage('navigateTo', this._onNavigateToMessage);\n        this.onMessage('scrollToChildPos', this._onScrollToChildPosMessage);\n        this.onMessage('parentPositionInfo', this.sendViewportAndIFramePosition);\n\n        // Add a listener for processing messages from the child.\n        window.addEventListener('message', this._processMessage, false);\n\n        // Construct the iframe in the container element.\n        this._constructIframe();\n\n        return this;\n    };\n\n    /**\n     * The Child half of a responsive iframe.\n     *\n     * @memberof module:pym\n     * @class Child\n     * @param {Object} [config] Configuration for the child instance. sets {@link module:pym.Child~settings}\n     * @param {function} [config.renderCallback=null] Callback invoked after receiving a resize event from the parent, sets {@link module:pym.Child#settings.renderCallback}\n     * @param {string} [config.xdomain='*'] - xdomain to validate messages received\n     * @param {number} [config.polling=0] - polling frequency in milliseconds to send height to parent\n     * @param {number} [config.id] - parent container id used when navigating the child iframe to a new page but we want to keep it responsive.\n     * @param {string} [config.parenturlparam] - if passed it will be override the default parentUrl query string parameter name expected on the iframe src\n     */\n    lib.Child = function(config) {\n        /**\n         * The initial width of the parent page\n         *\n         * @memberof module:pym.Child\n         * @member {string} parentWidth\n         * @inner\n         */\n        this.parentWidth = null;\n        /**\n         * The id of the parent container\n         *\n         * @memberof module:pym.Child\n         * @member {String} id\n         * @inner\n         */\n        this.id = null;\n        /**\n         * The title of the parent page from document.title.\n         *\n         * @memberof module:pym.Child\n         * @member {String} parentTitle\n         * @inner\n         */\n        this.parentTitle = null;\n        /**\n         * The URL of the parent page from window.location.href.\n         *\n         * @memberof module:pym.Child\n         * @member {String} parentUrl\n         * @inner\n         */\n        this.parentUrl = null;\n        /**\n         * The settings for the child instance. Can be overriden by passing a config object to the child constructor\n         * i.e.: var pymChild = new pym.Child({renderCallback: render, xdomain: \"\\\\*\\.npr\\.org\"})\n         *\n         * @memberof module:pym.Child.settings\n         * @member {Object} settings - default settings for the child instance\n         * @inner\n         */\n        this.settings = {\n            renderCallback: null,\n            xdomain: '*',\n            polling: 0,\n            parenturlparam: 'parentUrl'\n        };\n\n        /**\n         * The timerId in order to be able to stop when polling is enabled\n         *\n         * @memberof module:pym.Child\n         * @member {String} timerId\n         * @inner\n         */\n        this.timerId = null;\n        /**\n         * RegularExpression to validate the received messages\n         *\n         * @memberof module:pym.Child\n         * @member {String} messageRegex\n         * @inner\n         */\n        this.messageRegex = null;\n        /**\n         * Stores the registered messageHandlers for each messageType\n         *\n         * @memberof module:pym.Child\n         * @member {Object} messageHandlers\n         * @inner\n         */\n        this.messageHandlers = {};\n\n        // Ensure a config object\n        config = (config || {});\n\n        /**\n         * Bind a callback to a given messageType from the child.\n         *\n         * Reserved message names are: \"width\".\n         *\n         * @memberof module:pym.Child\n         * @method onMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message being listened for.\n         * @param {module:pym.Child~onMessageCallback} callback The callback to invoke when a message of the given type is received.\n         */\n        this.onMessage = function(messageType, callback) {\n\n            if (!(messageType in this.messageHandlers)) {\n                this.messageHandlers[messageType] = [];\n            }\n\n            this.messageHandlers[messageType].push(callback);\n        };\n\n        /**\n         * @callback module:pym.Child~onMessageCallback\n         * @param {String} message The message data.\n         */\n\n\n        /**\n         * Fire all event handlers for a given message type.\n         *\n         * @memberof module:pym.Child\n         * @method _fire\n         * @inner\n         *\n         * @param {String} messageType The type of message.\n         * @param {String} message The message data.\n         */\n        this._fire = function(messageType, message) {\n            /*\n             * Fire all event handlers for a given message type.\n             */\n            if (messageType in this.messageHandlers) {\n                for (var i = 0; i < this.messageHandlers[messageType].length; i++) {\n                   this.messageHandlers[messageType][i].call(this, message);\n                }\n            }\n        };\n\n        /**\n         * Process a new message from the parent.\n         *\n         * @memberof module:pym.Child\n         * @method _processMessage\n         * @inner\n         *\n         * @param {Event} e A message event.\n         */\n        this._processMessage = function(e) {\n            /*\n            * Process a new message from parent frame.\n            */\n            // First, punt if this isn't from an acceptable xdomain.\n            if (!_isSafeMessage(e, this.settings)) {\n                return;\n            }\n\n            // Discard object messages, we only care about strings\n            if (typeof e.data !== 'string') {\n                return;\n            }\n\n            // Get the message from the parent.\n            var match = e.data.match(this.messageRegex);\n\n            // If there's no match or it's a bad format, punt.\n            if (!match || match.length !== 3) { return; }\n\n            var messageType = match[1];\n            var message = match[2];\n\n            this._fire(messageType, message);\n        }.bind(this);\n\n        /**\n         * Resize iframe in response to new width message from parent.\n         *\n         * @memberof module:pym.Child\n         * @method _onWidthMessage\n         * @inner\n         *\n         * @param {String} message The new width.\n         */\n        this._onWidthMessage = function(message) {\n            /*\n             * Handle width message from the child.\n             */\n            var width = parseInt(message);\n\n            // Change the width if it's different.\n            if (width !== this.parentWidth) {\n                this.parentWidth = width;\n\n                // Call the callback function if it exists.\n                if (this.settings.renderCallback) {\n                    this.settings.renderCallback(width);\n                }\n\n                // Send the height back to the parent.\n                this.sendHeight();\n            }\n        };\n\n        /**\n         * Send a message to the the Parent.\n         *\n         * @memberof module:pym.Child\n         * @method sendMessage\n         * @instance\n         *\n         * @param {String} messageType The type of message to send.\n         * @param {String} message The message data to send.\n         */\n        this.sendMessage = function(messageType, message) {\n            /*\n             * Send a message to the parent.\n             */\n            window.parent.postMessage(_makeMessage(this.id, messageType, message), '*');\n        };\n\n        /**\n         * Transmit the current iframe height to the parent.\n         *\n         * Call this directly in cases where you manually alter the height of the iframe contents.\n         *\n         * @memberof module:pym.Child\n         * @method sendHeight\n         * @instance\n         */\n        this.sendHeight = function() {\n            // Get the child's height.\n            var height = document.getElementsByTagName('body')[0].offsetHeight.toString();\n\n            // Send the height to the parent.\n            this.sendMessage('height', height);\n\n            return height;\n        }.bind(this);\n\n        /**\n         * Ask parent to send the current viewport and iframe position information\n         *\n         * @memberof module:pym.Child\n         * @method sendHeight\n         * @instance\n         */\n        this.getParentPositionInfo = function() {\n            // Send the height to the parent.\n            this.sendMessage('parentPositionInfo');\n        };\n\n        /**\n         * Scroll parent to a given element id.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentTo\n         * @instance\n         *\n         * @param {String} hash The id of the element to scroll to.\n         */\n        this.scrollParentTo = function(hash) {\n            this.sendMessage('navigateTo', '#' + hash);\n        };\n\n        /**\n         * Navigate parent to a given url.\n         *\n         * @memberof module:pym.Child\n         * @method navigateParentTo\n         * @instance\n         *\n         * @param {String} url The url to navigate to.\n         */\n        this.navigateParentTo = function(url) {\n            this.sendMessage('navigateTo', url);\n        };\n\n        /**\n         * Scroll parent to a given child element id.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentToChildEl\n         * @instance\n         *\n         * @param {String} id The id of the child element to scroll to.\n         */\n        this.scrollParentToChildEl = function(id) {\n            // Get the child element position using getBoundingClientRect + pageYOffset\n            // via https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n            var topPos = document.getElementById(id).getBoundingClientRect().top + window.pageYOffset;\n            this.scrollParentToChildPos(topPos);\n        };\n\n        /**\n         * Scroll parent to a particular child offset.\n         *\n         * @memberof module:pym.Child\n         * @method scrollParentToChildPos\n         * @instance\n         *\n         * @param {Number} pos The offset of the child element to scroll to.\n         */\n        this.scrollParentToChildPos = function(pos) {\n            this.sendMessage('scrollToChildPos', pos.toString());\n        };\n\n        /**\n         * Mark Whether the child is embedded or not\n         * executes a callback in case it was passed to the config\n         *\n         * @memberof module:pym.Child\n         * @method _markWhetherEmbedded\n         * @inner\n         *\n         * @param {module:pym.Child~onMarkedEmbeddedStatus} The callback to execute after determining whether embedded or not.\n         */\n        var _markWhetherEmbedded = function(onMarkedEmbeddedStatus) {\n          var htmlElement = document.getElementsByTagName('html')[0],\n              newClassForHtml,\n              originalHtmlClasses = htmlElement.className;\n          try {\n            if(window.self !== window.top) {\n              newClassForHtml = \"embedded\";\n            }else{\n              newClassForHtml = \"not-embedded\";\n            }\n          }catch(e) {\n            newClassForHtml = \"embedded\";\n          }\n          if(originalHtmlClasses.indexOf(newClassForHtml) < 0) {\n            htmlElement.className = originalHtmlClasses ? originalHtmlClasses + ' ' + newClassForHtml : newClassForHtml;\n            if(onMarkedEmbeddedStatus){\n              onMarkedEmbeddedStatus(newClassForHtml);\n            }\n            _raiseCustomEvent(\"marked-embedded\");\n          }\n        };\n\n        /**\n         * @callback module:pym.Child~onMarkedEmbeddedStatus\n         * @param {String} classname \"embedded\" or \"not-embedded\".\n         */\n\n        /**\n         * Unbind child event handlers and timers.\n         *\n         * @memberof module:pym.Child\n         * @method remove\n         * @instance\n         */\n        this.remove = function() {\n            window.removeEventListener('message', this._processMessage);\n            if (this.timerId) {\n                clearInterval(this.timerId);\n            }\n        };\n\n        // Initialize settings with overrides.\n        for (var key in config) {\n            this.settings[key] = config[key];\n        }\n\n        // Identify what ID the parent knows this child as.\n        this.id = _getParameterByName('childId') || config.id;\n        this.messageRegex = new RegExp('^pym' + MESSAGE_DELIMITER + this.id + MESSAGE_DELIMITER + '(\\\\S+)' + MESSAGE_DELIMITER + '(.*)$');\n\n        // Get the initial width from a URL parameter.\n        var width = parseInt(_getParameterByName('initialWidth'));\n\n        // Get the url of the parent frame\n        this.parentUrl = _getParameterByName(this.settings.parenturlparam);\n\n        // Get the title of the parent frame\n        this.parentTitle = _getParameterByName('parentTitle');\n\n        // Bind the required message handlers\n        this.onMessage('width', this._onWidthMessage);\n\n        // Set up a listener to handle any incoming messages.\n        window.addEventListener('message', this._processMessage, false);\n\n        // If there's a callback function, call it.\n        if (this.settings.renderCallback) {\n            this.settings.renderCallback(width);\n        }\n\n        // Send the initial height to the parent.\n        this.sendHeight();\n\n        // If we're configured to poll, create a setInterval to handle that.\n        if (this.settings.polling) {\n            this.timerId = window.setInterval(this.sendHeight, this.settings.polling);\n        }\n\n        _markWhetherEmbedded(config.onMarkedEmbeddedStatus);\n\n        return this;\n    };\n\n    // Initialize elements with pym data attributes\n    // if we are not in server configuration\n    if(typeof document !== \"undefined\") {\n        lib.autoInit(true);\n    }\n\n    return lib;\n});\n\n\n},{}],2:[function(require,module,exports){\nvar App = require('./modules/main-app.js');\nApp.init();\n\n},{\"./modules/main-app.js\":4}],3:[function(require,module,exports){\nmodule.exports = (function () {\n  /**\n   * Source:\n   * https://github.com/remy/polyfills/blob/master/dataset.js\n   */\n  var forEach = [].forEach,\n      regex = /^data-(.+)/,\n      dashChar = /\\-([a-z])/ig,\n      el = document.createElement('div'),\n      mutationSupported = false,\n      match\n  ;\n\n  function detectMutation() {\n    mutationSupported = true;\n    this.removeEventListener('DOMAttrModified', detectMutation, false);\n  }\n\n  function toCamelCase(s) {\n    return s.replace(dashChar, function (m,l) { return l.toUpperCase(); });\n  }\n\n  function updateDataset() {\n    var dataset = {};\n    forEach.call(this.attributes, function(attr) {\n      if (match = attr.name.match(regex))\n        dataset[toCamelCase(match[1])] = attr.value;\n    });\n    return dataset;\n  }\n\n  // only add support if the browser doesn't support data-* natively\n  if (el.dataset != undefined) return;\n\n  el.addEventListener('DOMAttrModified', detectMutation, false);\n  el.setAttribute('foo', 'bar');\n\n  function defineElementGetter (obj, prop, getter) {\n    if (Object.defineProperty) {\n        Object.defineProperty(obj, prop,{\n            get : getter\n        });\n    } else {\n        obj.__defineGetter__(prop, getter);\n    }\n  }\n\n  defineElementGetter(Element.prototype, 'dataset', mutationSupported\n    ? function () {\n      if (!this._datasetCache) {\n        this._datasetCache = updateDataset.call(this);\n      }\n      return this._datasetCache;\n    }\n    : updateDataset\n  );\n\n  document.addEventListener('DOMAttrModified', function (event) {\n    delete event.target._datasetCache;\n  }, false);\n})();\n},{}],4:[function(require,module,exports){\nmodule.exports = (function () {\n\tvar o = {\n\t\tphSelector: '.mkc-placeholder'\n\t};\n\n\trequire('./dataset-polyfill.js');\n\tvar pym = require('pym.js');\n\n\tfunction uniqid(prefix, more_entropy) {\n\t\t//  discuss at: http://phpjs.org/functions/uniqid/\n\t\t// original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n\t\t//  revised by: Kankrelune (http://www.webfaktory.info/)\n\t\t//        note: Uses an internal counter (in php_js global) to avoid collision\n\t\t//        test: skip\n\t\t//   example 1: uniqid();\n\t\t//   returns 1: 'a30285b160c14'\n\t\t//   example 2: uniqid('foo');\n\t\t//   returns 2: 'fooa30285b1cd361'\n\t\t//   example 3: uniqid('bar', true);\n\t\t//   returns 3: 'bara20285b23dfd1.31879087'\n\n\t\tif (typeof prefix === 'undefined') {\n\t\t\tprefix = '';\n\t\t}\n\n\t\tvar retId;\n\t\tvar formatSeed = function(seed, reqWidth) {\n\t\t\tseed = parseInt(seed, 10)\n\t\t\t\t.toString(16); // to hex str\n\t\t\tif (reqWidth < seed.length) {\n\t\t\t\t// so long we split\n\t\t\t\treturn seed.slice(seed.length - reqWidth);\n\t\t\t}\n\t\t\tif (reqWidth > seed.length) {\n\t\t\t\t// so short we pad\n\t\t\t\treturn Array(1 + (reqWidth - seed.length))\n\t\t\t\t\t.join('0') + seed;\n\t\t\t}\n\t\t\treturn seed;\n\t\t};\n\n\t\t// BEGIN REDUNDANT\n\t\tif (!this.php_js) {\n\t\t\tthis.php_js = {};\n\t\t}\n\t\t// END REDUNDANT\n\t\tif (!this.php_js.uniqidSeed) {\n\t\t\t// init seed with big random int\n\t\t\tthis.php_js.uniqidSeed = Math.floor(Math.random() * 0x75bcd15);\n\t\t}\n\t\tthis.php_js.uniqidSeed++;\n\n\t\t// start with prefix, add current milliseconds hex string\n\t\tretId = prefix;\n\t\tretId += formatSeed(parseInt(new Date()\n\t\t\t.getTime() / 1000, 10), 8);\n\t\t// add seed hex string\n\t\tretId += formatSeed(this.php_js.uniqidSeed, 5);\n\t\tif (more_entropy) {\n\t\t\t// for more entropy we add a float lower to 10\n\t\t\tretId += (Math.random() * 10)\n\t\t\t\t.toFixed(8)\n\t\t\t\t.toString();\n\t\t}\n\n\t\treturn retId;\n\t}\n\n\n\tfunction _getURL (dataIndex) {\n\t\t/**\n\t\t * TODO: Outsource targets table\n\t\t */\n\n\t\tvar hostPrefix  = 'https://cartes-elections.makina-corpus.net/';\n\n\t\tvar index = {\n\t\t\t'2015-cantons-et-candidats': {\n\t\t\t\turl: 'departementales-2015/app/public/'\n\t\t\t},\n\t\t\t'2015-resultats-departementales': {\n\t\t\t\turl: 'departementales-2015/app/public/departement.html'\n\t\t\t},\n\t\t}\n\t\tvar result = index[dataIndex];\n\n\t\tif (result && result.url) {\n\t\t\treturn hostPrefix + result.url;\n\t\t}\n\n\t\t// Defaut behavior, embed what you can.\n\n\t\tif (dataIndex.indexOf('_') === -1) {\n\t\t\treturn hostPrefix + dataIndex + '/';\n\t\t} else {\n\t\t\treturn hostPrefix + dataIndex.split('_')[0] + '/' + dataIndex.split('_')[1] + '.html';\n\t\t}\n\t}\n\n\tfunction _browserContext () {\n\t\treturn (typeof window !== 'undefined');\n\t}\n\n\tfunction _findPlaceholders () {\n\t\treturn document.querySelectorAll(o.phSelector);\n\t}\n\n\tfunction _eachPlaceholder (placeholder) {\n\t\tvar newID      = uniqid('mkc-');\n\t\tplaceholder.id = newID;\n\t\tvar dataIndex  = placeholder.dataset.source;\n\n\t\tvar pymParent  = new pym.Parent(newID, _getURL(dataIndex), {});\n\n\t\tpymParent.onMessage('event', function (message) {\n\t\t\tif (message === 'ready') {\n\t\t\t\tpymParent.sendMessage('data', JSON.stringify(placeholder.dataset));\n\n\t\t\t\tif (this.iframe && this.iframe.setAttribute) {\n\t\t\t\t\tthis.iframe.setAttribute('allowfullscreen', '');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction _init () {\n\t\tvar placeholders = _findPlaceholders();\n\t\t[].forEach.call(placeholders, _eachPlaceholder);\n\t}\n\treturn {\n\t\tinit: _init\n\t}\n}());\n\n},{\"./dataset-polyfill.js\":3,\"pym.js\":1}]},{},[2]);\n"]}